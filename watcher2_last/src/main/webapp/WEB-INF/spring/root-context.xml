<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
   http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd"
   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- DB연결을 위한 API(HikariCP) DB가 매번 커낵션하고 끊고 하는 일이 자원소모가 심하기 때문에 메모리에다가 커낵션을 
		만들어놓고, 열결되어있는 커낵션을 재활용하는 방식이 커낵션풀(Connection Pool) -->
	<!-- 히카리 CP 빈 등록 -->         <!-- 히카리CP라이브러리에 담겨있는 이름 -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
      <property name="driverClassName"
         value="com.mysql.jdbc.Driver" />
      <property name="jdbcUrl"
         value="jdbc:mysql://project-db-stu.ddns.net:3307/makeoff?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true" />
      <property name="username" value="makeoff" />
      <property name="password" value="flee" />
   </bean>
	<!-- mysql 라이브러리 5버전 이상에는 url뒤에 다른 설정을 해줘야한다. -->
	
	<!-- ↓ 커낵션풀을 만드는 역할  -->
	<!-- 히카리 CP 설정 -->
	<!-- bean : 객체를 만드는 태그 -->						<!-- 생성자가 호출되어서 히카리 config를 써먹을 수 있도록  -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<!-- public class A{
		private Stirng id;
		public void setId(String id){
			this.id = id;
			}
		}
	
	-->
	<!-- A a= newA();
	a.setId("smhrd");
	
	<bean id="a" class="aa.bb.cc.A">
	    <property name="id" value="smhrd" />
	</bean> -->
	
	<!-- A의 내용을 B가져다 쓰기 위해서 생성자 주입
	public class A{
	}
	
	public class B{
		private A a;
		public B(A a){
			this.a = a;
		}
		public void setA(A a){
			this.a = a;
		}
	}
	--> <!--구현되는 곳
	A a = new A();
	B b = new B();
	b.setA(a); // 생성자 주입
	
	<been id="a" class="aa.bb.cc.A"></bean>
	<been id="b" class="aa.bb.cc.B"></bean>
		<constructor-arg ref="a" />
		<property name="a" ref="a" />
	 -->
	 
	 <!-- boardMapper(interface)의 구현 클래스 생성
	 	SqlSessionFactoryBean(SQL문을 실행하는 API)
	  -->
	  <bean class="org.mybatis.spring.SqlSessionFactoryBean">
	      <property name="dataSource" ref="dataSource"/>
	  </bean>
	  
	  <!-- 어떤 mapper가 일을 하느냐? scan : Mapper interface들을 메모리에 올리는 것 -->
	  <!-- myBatis로 DB를 이용하려면 mapper 패키지안에서 맵퍼 표시해야함 -->
	  <mybatis-spring:scan base-package="kr.cctv.Mapper"/>
	
</beans>
